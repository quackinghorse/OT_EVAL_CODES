%LEAST COST for maximiztion problem

clc
clear all
c = [4 3 2 ; 5 6 1 ; 6 4 3; 3 5 4];
c2= [2 3 4 ;1 0 5 ;0 2 3 ; 3 1 2 ];
s = [10 8 5 6];
d = [9 12 8];

if sum(s) == sum(d)
    fprintf('Balanced');

else
    fprintf('Unbalanced');
    if sum(s)>sum(d)
        c2(:,end+1) = zeros(length(s),1)
        d(end+1) = sum(s)-sum(d);

    else
        c2(end+1,:) = zeros(1,length(d))
        s(end+1) = sum(d)-sum(s);
    end
end

ic = c;

x = zeros (size(c2));
for k =1 : size(c2,1)

    for t = 1 : size(c2,2)
        h = min(min(c2));
        [ri, c2i] = find(h==c2)
        x1 = min(s(ri), d(c2i))
        [value index] = max(x1);

        i = ri(index);
        j = c2i(index);
        val = min(s(i),d(j));
        x(i,j) = val;
        s(i) = s(i) - val;
        d(j) = d(j) - val;
        c2(i,j) = Inf;
    end
end

mincost = sum(sum(ic.*x))
fprintf('mincost is %f', mincost);

